# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    machine:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      image: circleci/classic:latest
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install codecov
          command: |
            pip install codecov==2.0.15

      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.18.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
            docker volume create --name redis_bounties
            docker volume create --name psql_bounties

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run django tests
          command: |
            docker-compose -f docker-compose-test.yml run bounties_api python manage.py test

      - run:
          name: run node tests
          command: |
            mkdir /home/circleci/repo/contract_subscriber/.nyc_output
            docker-compose -f docker-compose-test.yml run contract_subscriber npm run test

      - run:
          name: codecov upload
          command: |
            codecov -t $CODECOV


      - store_artifacts:
          path: test-reports
          destination: test-reports
          