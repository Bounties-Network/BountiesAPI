{
  "kind": "Deployment",
  "apiVersion": "extensions/v1beta1",
  "metadata": {
    "name": "bountiesapi",
    "namespace": "default",
    "selfLink": "/apis/extensions/v1beta1/namespaces/default/deployments/bountiesapi",
    "uid": "269f2e7a-1449-11e8-98ed-02122fce8e26",
    "resourceVersion": "2394197",
    "generation": 6,
    "creationTimestamp": "2018-02-18T01:15:04Z",
    "labels": {
      "run": "bountiesapi"
    },
    "annotations": {
      "deployment.kubernetes.io/revision": "6"
    }
  },
  "spec": {
    "replicas": 1,
    "selector": {
      "matchLabels": {
        "run": "bountiesapi"
      }
    },
    "template": {
      "metadata": {
        "creationTimestamp": null,
        "labels": {
          "run": "bountiesapi"
        }
      },
      "spec": {
        "containers": [
          {
            "name": "bountiesapi",
            "image": "consensysbounties/bounties_api:latest",
            "ports": [
              {
                "containerPort": 83,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "redis_location",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "cacheprod",
                    "key": "redis_location"
                  }
                }
              },
              {
                "name": "psql_host",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "psqlprod",
                    "key": "psql_host"
                  }
                }
              },
              {
                "name": "psql_password",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "psqlprod",
                    "key": "psql_password"
                  }
                }
              },
              {
                "name": "psql_port",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "psqlprod",
                    "key": "psql_port"
                  }
                }
              },
              {
                "name": "psql_user",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "psqlprod",
                    "key": "psql_user"
                  }
                }
              },
              {
                "name": "AWS_ACCESS_KEY_ID",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "awscreds",
                    "key": "AWS_ACCESS_KEY_ID"
                  }
                }
              },
              {
                "name": "AWS_SECRET_ACCESS_KEY",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "awscreds",
                    "key": "AWS_SECRET_ACCESS_KEY"
                  }
                }
              },
              {
                "name": "django_secret",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "djangosecretprod",
                    "key": "django_secret"
                  }
                }
              }
            ],
            "resources": {},
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "securityContext": {},
        "schedulerName": "default-scheduler"
      }
    },
    "strategy": {
      "type": "RollingUpdate",
      "rollingUpdate": {
        "maxUnavailable": 1,
        "maxSurge": 1
      }
    }
  },
  "status": {
    "observedGeneration": 6,
    "replicas": 1,
    "updatedReplicas": 1,
    "readyReplicas": 1,
    "availableReplicas": 1,
    "conditions": [
      {
        "type": "Available",
        "status": "True",
        "lastUpdateTime": "2018-02-18T01:15:04Z",
        "lastTransitionTime": "2018-02-18T01:15:04Z",
        "reason": "MinimumReplicasAvailable",
        "message": "Deployment has minimum availability."
      }
    ]
  }
}
