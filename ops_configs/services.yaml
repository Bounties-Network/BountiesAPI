apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      run: bountiesapi
    name: bountiesapi
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        run: bountiesapi
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          run: bountiesapi
      spec:
        containers:
        - args:
          - bash
          - -c
          - python3 manage.py runserver 0.0.0.0:83
          env:
          - name: redis_location
            valueFrom:
              secretKeyRef:
                key: redis_location
                name: cacheprod
          - name: psql_host
            valueFrom:
              secretKeyRef:
                key: psql_host
                name: psqlprod
          - name: psql_password
            valueFrom:
              secretKeyRef:
                key: psql_password
                name: psqlprod
          - name: psql_port
            valueFrom:
              secretKeyRef:
                key: psql_port
                name: psqlprod
          - name: psql_user
            valueFrom:
              secretKeyRef:
                key: psql_user
                name: psqlprod
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: AWS_ACCESS_KEY_ID
                name: awscreds
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: AWS_SECRET_ACCESS_KEY
                name: awscreds
          - name: django_secret
            valueFrom:
              secretKeyRef:
                key: django_secret
                name: djangosecretprod
          - name: rollbar_token
            valueFrom:
              secretKeyRef:
                key: rollbar_token
                name: rollbar
          image: consensysbounties/std_bounties:25
          imagePullPolicy: IfNotPresent
          name: bountiesapi
          ports:
          - containerPort: 83
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      run: bountiessubscriber
    name: bountiessubscriber
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        run: bountiessubscriber
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          run: bountiessubscriber
      spec:
        containers:
        - args:
          - bash
          - -c
          - python3 manage.py bounties_subscriber
          env:
          - name: redis_location
            valueFrom:
              secretKeyRef:
                key: redis_location
                name: cacheprod
          - name: psql_host
            valueFrom:
              secretKeyRef:
                key: psql_host
                name: psqlprod
          - name: psql_password
            valueFrom:
              secretKeyRef:
                key: psql_password
                name: psqlprod
          - name: psql_port
            valueFrom:
              secretKeyRef:
                key: psql_port
                name: psqlprod
          - name: psql_user
            valueFrom:
              secretKeyRef:
                key: psql_user
                name: psqlprod
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: AWS_ACCESS_KEY_ID
                name: awscreds
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: AWS_SECRET_ACCESS_KEY
                name: awscreds
          - name: django_secret
            valueFrom:
              secretKeyRef:
                key: django_secret
                name: djangosecretprod
          - name: rollbar_token
            valueFrom:
              secretKeyRef:
                key: rollbar_token
                name: rollbar
          - name: slack_token
            valueFrom:
              secretKeyRef:
                key: slack_token
                name: slack
          - name: queue_url
            valueFrom:
              secretKeyRef:
                key: queue_url
                name: sqs
          - name: eth_network
            valueFrom:
              secretKeyRef:
                key: eth_network
                name: network
          image: consensysbounties/std_bounties:26
          imagePullPolicy: Always
          name: bountiessubscriber
          ports:
          - containerPort: 8888
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      run: contracsubscriber
    name: contracsubscriber
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        run: contracsubscriber
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          run: contracsubscriber
      spec:
        containers:
        - args:
          - npm
          - start
          env:
          - name: redis_location
            valueFrom:
              secretKeyRef:
                key: redis_location
                name: cacheprod
          - name: psql_host
            valueFrom:
              secretKeyRef:
                key: psql_host
                name: psqlprod
          - name: psql_password
            valueFrom:
              secretKeyRef:
                key: psql_password
                name: psqlprod
          - name: psql_port
            valueFrom:
              secretKeyRef:
                key: psql_port
                name: psqlprod
          - name: psql_user
            valueFrom:
              secretKeyRef:
                key: psql_user
                name: psqlprod
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: AWS_ACCESS_KEY_ID
                name: awscreds
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: AWS_SECRET_ACCESS_KEY
                name: awscreds
          - name: django_secret
            valueFrom:
              secretKeyRef:
                key: django_secret
                name: djangosecretprod
          - name: rollbar_token
            valueFrom:
              secretKeyRef:
                key: rollbar_token
                name: rollbar
          - name: queue_url
            valueFrom:
              secretKeyRef:
                key: queue_url
                name: sqs
          - name: eth_network
            valueFrom:
              secretKeyRef:
                key: eth_network
                name: network
          image: docker.io/consensysbounties/contract_subscriber:26
          imagePullPolicy: IfNotPresent
          name: contracsubscriber
          ports:
          - containerPort: 8989
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      run: stagingbountiesapi
    name: stagingbountiesapi
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        run: stagingbountiesapi
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          run: stagingbountiesapi
      spec:
        containers:
        - args:
          - bash
          - -c
          - python3 manage.py runserver 0.0.0.0:83
          env:
          - name: redis_location
            valueFrom:
              secretKeyRef:
                key: redis_location
                name: cachestaging
          - name: psql_host
            valueFrom:
              secretKeyRef:
                key: psql_host
                name: psqlstaging
          - name: psql_password
            valueFrom:
              secretKeyRef:
                key: psql_password
                name: psqlstaging
          - name: psql_port
            valueFrom:
              secretKeyRef:
                key: psql_port
                name: psqlstaging
          - name: psql_user
            valueFrom:
              secretKeyRef:
                key: psql_user
                name: psqlstaging
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: AWS_ACCESS_KEY_ID
                name: awscreds
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: AWS_SECRET_ACCESS_KEY
                name: awscreds
          - name: django_secret
            valueFrom:
              secretKeyRef:
                key: django_secret
                name: djangosecretprod
          - name: rollbar_token
            valueFrom:
              secretKeyRef:
                key: rollbar_token
                name: rollbar
          image: consensysbounties/std_bounties:25
          imagePullPolicy: IfNotPresent
          name: stagingbountiesapi
          ports:
          - containerPort: 83
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      run: stagingbountiessubscriber
    name: stagingbountiessubscriber
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        run: stagingbountiessubscriber
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          run: stagingbountiessubscriber
      spec:
        containers:
        - args:
          - bash
          - -c
          - python3 manage.py bounties_subscriber
          env:
          - name: redis_location
            valueFrom:
              secretKeyRef:
                key: redis_location
                name: cachestaging
          - name: psql_host
            valueFrom:
              secretKeyRef:
                key: psql_host
                name: psqlstaging
          - name: psql_password
            valueFrom:
              secretKeyRef:
                key: psql_password
                name: psqlstaging
          - name: psql_port
            valueFrom:
              secretKeyRef:
                key: psql_port
                name: psqlstaging
          - name: psql_user
            valueFrom:
              secretKeyRef:
                key: psql_user
                name: psqlstaging
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: AWS_ACCESS_KEY_ID
                name: awscreds
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: AWS_SECRET_ACCESS_KEY
                name: awscreds
          - name: django_secret
            valueFrom:
              secretKeyRef:
                key: django_secret
                name: djangosecretprod
          - name: rollbar_token
            valueFrom:
              secretKeyRef:
                key: rollbar_token
                name: rollbar
          - name: slack_token
            valueFrom:
              secretKeyRef:
                key: slack_token
                name: slack
          - name: queue_url
            valueFrom:
              secretKeyRef:
                key: queue_url
                name: sqsstaging
          - name: eth_network
            valueFrom:
              secretKeyRef:
                key: eth_network
                name: rinkebynetwork
          image: consensysbounties/std_bounties:25
          imagePullPolicy: Always
          name: stagingbountiessubscriber
          ports:
          - containerPort: 8888
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      run: stagingcontractsubscriber
    name: stagingcontractsubscriber
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        run: stagingcontractsubscriber
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          run: stagingcontractsubscriber
      spec:
        containers:
        - args:
          - npm
          - start
          env:
          - name: redis_location
            valueFrom:
              secretKeyRef:
                key: redis_location
                name: cachestaging
          - name: psql_host
            valueFrom:
              secretKeyRef:
                key: psql_host
                name: psqlstaging
          - name: psql_password
            valueFrom:
              secretKeyRef:
                key: psql_password
                name: psqlstaging
          - name: psql_port
            valueFrom:
              secretKeyRef:
                key: psql_port
                name: psqlstaging
          - name: psql_user
            valueFrom:
              secretKeyRef:
                key: psql_user
                name: psqlstaging
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: AWS_ACCESS_KEY_ID
                name: awscreds
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: AWS_SECRET_ACCESS_KEY
                name: awscreds
          - name: django_secret
            valueFrom:
              secretKeyRef:
                key: django_secret
                name: djangosecretprod
          - name: rollbar_token
            valueFrom:
              secretKeyRef:
                key: rollbar_token
                name: rollbar
          - name: queue_url
            valueFrom:
              secretKeyRef:
                key: queue_url
                name: sqsstaging
          - name: eth_network
            valueFrom:
              secretKeyRef:
                key: eth_network
                name: rinkebynetwork
          image: docker.io/consensysbounties/contract_subscriber:26
          imagePullPolicy: IfNotPresent
          name: stagingcontractsubscriber
          ports:
          - containerPort: 8989
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      run: stagingtrackbountyexpirations
    name: stagingtrackbountyexpirations
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        run: stagingtrackbountyexpirations
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          run: stagingtrackbountyexpirations
      spec:
        containers:
        - args:
          - bash
          - -c
          - python3 manage.py track_bounty_expirations
          env:
          - name: redis_location
            valueFrom:
              secretKeyRef:
                key: redis_location
                name: cachestaging
          - name: psql_host
            valueFrom:
              secretKeyRef:
                key: psql_host
                name: psqlstaging
          - name: psql_password
            valueFrom:
              secretKeyRef:
                key: psql_password
                name: psqlstaging
          - name: psql_port
            valueFrom:
              secretKeyRef:
                key: psql_port
                name: psqlstaging
          - name: psql_user
            valueFrom:
              secretKeyRef:
                key: psql_user
                name: psqlstaging
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: AWS_ACCESS_KEY_ID
                name: awscreds
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: AWS_SECRET_ACCESS_KEY
                name: awscreds
          - name: django_secret
            valueFrom:
              secretKeyRef:
                key: django_secret
                name: djangosecretprod
          - name: rollbar_token
            valueFrom:
              secretKeyRef:
                key: rollbar_token
                name: rollbar
          - name: slack_token
            valueFrom:
              secretKeyRef:
                key: slack_token
                name: slack
          - name: queue_url
            valueFrom:
              secretKeyRef:
                key: queue_url
                name: sqsstaging
          - name: eth_network
            valueFrom:
              secretKeyRef:
                key: eth_network
                name: rinkebynetwork
          image: consensysbounties/std_bounties:25
          imagePullPolicy: IfNotPresent
          name: stagingtrackbountyexpirations
          ports:
          - containerPort: 8787
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      run: trackbountyexpirations
    name: trackbountyexpirations
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        run: trackbountyexpirations
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          run: trackbountyexpirations
      spec:
        containers:
        - args:
          - bash
          - -c
          - python3 manage.py track_bounty_expirations
          env:
          - name: redis_location
            valueFrom:
              secretKeyRef:
                key: redis_location
                name: cacheprod
          - name: psql_host
            valueFrom:
              secretKeyRef:
                key: psql_host
                name: psqlprod
          - name: psql_password
            valueFrom:
              secretKeyRef:
                key: psql_password
                name: psqlprod
          - name: psql_port
            valueFrom:
              secretKeyRef:
                key: psql_port
                name: psqlprod
          - name: psql_user
            valueFrom:
              secretKeyRef:
                key: psql_user
                name: psqlprod
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: AWS_ACCESS_KEY_ID
                name: awscreds
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: AWS_SECRET_ACCESS_KEY
                name: awscreds
          - name: django_secret
            valueFrom:
              secretKeyRef:
                key: django_secret
                name: djangosecretprod
          - name: rollbar_token
            valueFrom:
              secretKeyRef:
                key: rollbar_token
                name: rollbar
          - name: slack_token
            valueFrom:
              secretKeyRef:
                key: slack_token
                name: slack
          - name: queue_url
            valueFrom:
              secretKeyRef:
                key: queue_url
                name: sqs
          - name: eth_network
            valueFrom:
              secretKeyRef:
                key: eth_network
                name: network
          image: consensysbounties/std_bounties:25
          imagePullPolicy: IfNotPresent
          name: trackbountyexpirations
          ports:
          - containerPort: 8787
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30