version: 2
jobs:
  build:
    machine:
      image: circleci/classic:latest

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install flake8 for python linting
          command: |
            pyenv global 3.5.2
            pip3 install flake8==3.5.0

      - run:
          name: Lint python code
          command: flake8 --ignore=E501,F405,W191

      - run:
          name: Build docker image
          command: docker build ./bounties_api --tag consensysbounties/std_bounties:$CIRCLE_SHA1

      - run:
          name: Create docker postgres volume
          command: docker volume create --name psql_bounties

      - run:
          name: Check API for differences
          command: |
            SLEEP_FOR_SECONDS=20
            EXPORT_PATH=bounties_api/static/autogenerated_swagger_new.yml
            docker volume create --name=redis_bounties
            echo "Starting up bounties_api"
            docker-compose up -d bounties_api
            echo "Waiting $SLEEP_FOR_SECONDS seconds for container to get up and running..."
            sleep $SLEEP_FOR_SECONDS
            echo "Exporting swagger to $EXPORT_PATH"
            curl http://127.0.0.1:8000/swagger.yaml > $EXPORT_PATH
            diff bounties_api/static/autogenerated_swagger_new.yml bounties_api/static/autogenerated_swagger.yml

      - run:
          name: Run django tests
          command: docker-compose -f docker-compose-circleci-test.yml run bounties_api bash -c "sleep 5 && python manage.py test"

      - run:
          name: log in to docker hub and upload docker image
          command: |
            if [ "$DOCKER_HUB_USERNAME" != "" ] && [ "$DOCKER_HUB_PASSWORD" != "" ]; then
              docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
              docker push consensysbounties/std_bounties:$CIRCLE_SHA1
            else
              echo "Missing credentials, skipping docker image pushing"
            fi

      - run:
          name: Install codecov
          command: pip install codecov==2.0.15

      - run:
          name: Run and upload code coverage
          command: bash <(curl -s https://codecov.io/bash)

      - store_artifacts:
          path: test-reports
          destination: test-reports
